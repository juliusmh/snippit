filetype: vhdl

detect: 
    filename: "\\.vhdl?$"

rules:
    - type: "(i)\\b(string|integer|natural|positive|(un)?signed|std_u?logic(_vector)?|bit(_vector)?|boolean|u?x01z?|array|range)\\b"
    - identifier: "(?i)library[[:space:]]+[a-zA-Z_0-9]+"
    - identifier: "(?i)use[[:space:]]+[a-zA-Z_0-9\\.]+"
    - identifier: "(?i)component[[:space:]]+[a-zA-Z_0-9]+"
    - identifier: "(?i)(architecture|configuration)[[:space:]]+[a-zA-Z_0-9]+[[:space:]]+of[[:space:]]+[a-zA-Z_0-9]+"
    - identifier: "(?i)(entity|package)[[:space:]]+[a-zA-Z_0-9]+[[:space:]]+is"
    - identifier: "(?i)end[[:space:]]+((architecture|entity|component|process|package|generate)[[:space:]]+)?[a-zA-Z_0-9]+"
    - statement: "(?i)\\b(abs|access|after|alias|all|and|architecture|assert|attribute)\\b"
    - statement: "(?i)\\b(begin|block|body|buffer|bus|case|component|configuration|constant)\\b"
    - statement: "(?i)\\b(disconnect|downto|else|elsif|end|entity|exit)\\b"
    - statement: "(?i)\\b(file|for|function|generate|generic|guarded)\\b"
    - statement: "(?i)\\b(if|impure|in|inertial|inout|is)\\b"
    - statement: "(?i)\\b(label|library|linkage|literal|loop|map|mod)\\b"
    - statement: "(?i)\\b(nand|new|next|nor|not|null|of|on|open|or|others|out)\\b"
    - statement: "(?i)\\b(package|port|postponed|procedure|process|pure)\\b"
    - statement: "(?i)\\b(range|record|register|reject|rem|report|return|rol|ror)\\b"
    - statement: "(?i)\\b(select|severity|shared|signal|sla|sll|sra|srl|subtype)\\b"
    - statement: "(?i)\\b(then|to|transport|type|unaffected|units|until|use)\\b"
    - statement: "(?i)\\b(variable|wait|when|while|with|xnor|xor)\\b"
    - statement: "(?i)'(base|left|right|high|low|pos|val|succ|pred|leftof|rightof|image|(last_)?value)"
    - statement: "(?i)'((reverse_)?range|length|ascending|event|stable)"
    - statement: "(?i)'(simple|path|instance)_name"
    - statement: "(?i)\\b(std_match|(rising|falling)_edge|is_x)\\b"
    - statement: "(?i)\\bto_(unsigned|signed|integer|u?x01z?|stdu?logic(vector)?)\\b"
    - symbol.operator: "(\\+|-|\\*|/|&|<|>|=|\\.|:)"
    - constant.number: "(?i)'([0-1]|u|x|z|w|l|h|-)'|[box]?\"([0-1a-fA-F]|u|x|z|w|l|h|-)+\""
    - constant.number: "(?i)\\b[0-9\\._]+(e[\\-]?[0-9]+)?( ?[fpnum]?s)?\\b"
    - constant.bool: "(?i)\\b(true|false)\\b"
    - constant: "(?i)\\b(note|warning|error|failure)\\b"
    - constant.string: "\"[^\"]*\""
    - comment: "--.*"
